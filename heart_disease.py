# -*- coding: utf-8 -*-
"""heart_disease.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ANWJxMStVoFjXT74B_xKu0NfuqXp7A98
"""

import zipfile
from google.colab import drive

drive.mount('/content/drive/')

zip_ref = zipfile.ZipFile("/content/heart.zip", 'r')
zip_ref.extractall()
zip_ref.close()

import pandas as pd

import matplotlib.pyplot as plt
import numpy as np

df = pd.read_csv('/content/framingham.csv')

df

df.dropna(inplace = True)

X = df.iloc[:,:-1].values
Y = df.iloc[:,-1].values

from sklearn.model_selection import train_test_split
X_train , X_test , Y_train , Y_test= train_test_split(X, Y, test_size = 0.33)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

from sklearn import svm

from sklearn.metrics import f1_score

model = svm.SVC()

model.fit(X_train,Y_train)

y_pred = model.predict(X_test)

f1 = f1_score(y_pred, Y_test)

print(f1)

from sklearn.metrics import  recall_score, accuracy_score

recall = recall_score(y_pred, Y_test)

print(recall)

accuracy = accuracy_score(y_pred, Y_test)

print(accuracy)

from sklearn.metrics import confusion_matrix
confmat = confusion_matrix(y_true=Y_test, y_pred=y_pred)

print(confmat)

fig, ax =plt.subplots(figsize=(12.5, 12.5))
ax.matshow(confmat,  cmap=plt.cm.Blues, alpha=0.30)
for i in range(confmat.shape[0]):
  for j in range(confmat.shape[1]):
    ax.text(x=j, y=i,
            s=confmat[i, j],
            va='center', ha='center')
    plt.title('Risk CHD with 85% accuracy identifying false negatives and false positives as well as true positives and true negatives. With 0 being  no risk and 1 being risk')
    plt.xlabel('Predicted label')
    plt.ylabel('True Label')